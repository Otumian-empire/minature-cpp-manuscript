
* Create a function for each of the following, using any means possible without cutting corners.( no using of built-in function - we have to try our best)
    1. `addition` - this function takes two objects as argument,  and returns their sum if they are numbers, that is a float or an int.
    1. `subtraction` - this function takes two objects as argument, returns the resut of subtracting the second from the first.
    1. `division` - this function takes two objects as argument, returns the result from dividing the first by the second. Remember that zero division is not allowed thus check if the second is zero.
    1. `multplication` - this function takes two objects as argument, returns the product of the two.

* Write a function, that takes a list of various objects as an argument, return a list of all the objects that are numbers ( that is integer and float).

* Write a function taking a list of various objects as argument, return the number of each object in the list. (This is also known as the frequency counter)

* Write a function that takes a list of integers as an argument, remove ( delete) any element that has the same parity as its `index + 1` .( If the `index + 1` is even and the element is even, remove the element. If element is odd and `index + 1` is odd, remove element, except when the `index` is 0), looping `n - 1` times, where `n` is the size of the list.

    ``` Python
    s = [2, 6, 18, 11, 4]
    # 6 is removed - loop 1
    # index of 6, + 1 = 2

    s = [2, 18, 11, 4]
    # 18 is removed - loop 2
    # index of 18, + 1 = 2

    s = [2, 11, 4]
    # 11 is not removed - loop 3
    # index of 11, + 1 = 2

    s = [2, 11, 4]
    # 4 is not removed - loop 4
    # index of 4, + 1 = 3

    # final output
    s = [2, 11, 4]
    ```

* Write a function that takes a list of integers as input, then return a list with the same parity as the first element.


* Write a program that creates a dynamic user profile. Make use of the `input()`. Make use of setdefault.
* Write a function that removes items with duplicate values
* Write a function that reverses a dictionary
* Write a function that sorts a dictionary by Key then value ( 2 functions)
* Write a function that takes a dictionary as an argument, return another dictionary that has the frequencey of the length of the value, if value is int or float, frequencey is number of digits. Keep the keys of the old as the new.
